import { Button, TextField } from "@mui/material";
import Head from "next/head";
import { useSpring, animated } from "react-spring";
import { useRouter } from "next/router";
import React, { ChangeEvent, useState } from "react";
import { useCreateUserMutation, useLogInMutation } from "src/generated/graphql";
import styled from "styled-components";

const CenteredContainer = styled.div`
  min-width: 100vw;
  min-height: 93vh;
  width: 100%;
  height: 93%;
  display: flex;
  align-items: center;
`;

const FooterContainer = styled.div`
  width: 100%;
  height: 7vh;
  background-color: white;
  display: flex;
  justify-content: center;
  align-items: center;
`;

const ContainerLeft = styled.div`
  width: 55%;
  height: 93vh;
  background: url("/images/esports.png") no-repeat center center;
  background-position: center center;
`;

const ContainerRight = styled.div`
  width: 45%;
  height: 93vh;
  background-color: white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;

const InnerLeftContainer = styled(animated.div)`
  width: 85%;
  height: 80%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
`;

const TextInput = styled(TextField)``;

type InputContainerProps = {
  register?: boolean;
};

const InputContainer = styled.form<InputContainerProps>`
  width: 80%;
  height: ${({ register }) => (register ? "52" : "32")}%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
`;

const Homepage = () => {
  const history = useRouter();
  const [isRegister, setIsRegister] = useState(false);
  const [reset, setReset] = useState(true);
  const [, logIn] = useLogInMutation();
  const [, register] = useCreateUserMutation();
  const transitions = useSpring({
    from: { opacity: 0, transform: "translate3d(100%,0,0)" },
    to: { opacity: 1, transform: "translate3d(0%,0,0)" },
    onResolve: () => setReset(false),
    reset,
  });

  const [logInValues, setLogInValues] = useState({
    email: "",
    password: "",
    username: "",
    confirm: "",
  });
  const [registerValues, setRegisterValues] = useState({
    email: "",
    password: "",
    username: "",
    confirm: "",
  });

  const handleLoginInputChange = (e: ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setLogInValues({
      ...logInValues,
      [name]: value,
    });
  };
  const handleRegisterInputChange = (e: ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setRegisterValues({
      ...registerValues,
      [name]: value,
    });
  };

  const handleSwap = () => {
    setReset(true);
    setIsRegister(!isRegister);
  };

  const handleLogIn = async (e: ChangeEvent<HTMLFormElement>) => {
    e.preventDefault();
    const { data } = await logIn(logInValues);
    if (data?.logIn.error) {
      console.info(data?.logIn.error);
      return;
    }
    history.reload();
  };

  const handleRegister = async (e: ChangeEvent<HTMLFormElement>) => {
    e.preventDefault();
    const { data } = await register(registerValues);
    if (data?.createUser.error) {
      console.info(data.createUser.error);
      return;
    }
    history.reload();
  };

  return (
    <>
      <Head>
        <title>Dark Crystal</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CenteredContainer>
        <ContainerLeft />
        <ContainerRight>
          {isRegister ? (
            <InnerLeftContainer style={transitions}>
              <h1 style={{ fontFamily: "Nautigal", marginBottom: "4rem" }}>
                Dark Crystal
              </h1>
              <InputContainer onSubmit={handleRegister} register>
                <TextInput
                  variant="outlined"
                  label="Email"
                  name="email"
                  type="email"
                  value={registerValues.email}
                  onChange={handleRegisterInputChange}
                />
                <TextInput
                  variant="outlined"
                  label="Username"
                  name="username"
                  value={registerValues.username}
                  onChange={handleRegisterInputChange}
                />
                <TextInput
                  variant="outlined"
                  label="Password"
                  type="password"
                  name="password"
                  value={registerValues.password}
                  onChange={handleRegisterInputChange}
                />
                <TextInput
                  variant="outlined"
                  label="Confirm Password"
                  type="password"
                  name="confirm"
                  value={registerValues.confirm}
                  onChange={handleRegisterInputChange}
                />
                <Button type="submit" variant="contained">
                  Register
                </Button>
              </InputContainer>
              <p>
                Already an user?
                <a
                  onClick={handleSwap}
                  style={{ cursor: "pointer", color: "blue", marginLeft: 2 }}
                >
                  Log in
                </a>
              </p>
            </InnerLeftContainer>
          ) : (
            <InnerLeftContainer style={transitions}>
              <h1 style={{ fontFamily: "Nautigal", marginBottom: "4rem" }}>
                Dark Crystal
              </h1>
              <InputContainer onSubmit={handleLogIn}>
                <TextInput
                  variant="outlined"
                  label="Email"
                  name="email"
                  value={logInValues.email}
                  onChange={handleLoginInputChange}
                />
                <TextInput
                  variant="outlined"
                  label="Password"
                  type="password"
                  name="password"
                  value={logInValues.password}
                  onChange={handleLoginInputChange}
                />
                <Button type="submit" variant="contained">
                  Login
                </Button>
              </InputContainer>
              <p>
                Don't have an account?
                <a
                  onClick={handleSwap}
                  style={{ cursor: "pointer", color: "blue", marginLeft: 2 }}
                >
                  Sign up
                </a>
              </p>
            </InnerLeftContainer>
          )}
        </ContainerRight>
      </CenteredContainer>
      <FooterContainer>
        <p>Â© 2022, Dark Crystal LLC.</p>
      </FooterContainer>
    </>
  );
};

export default Homepage;
